{% extends "platformBase/" + platformBaseTemplate + '.njk' %}
{% set packageName %}edb-as<xx>-server{% endset %}
{% import "platformBase/_deploymentConstants.njk" as deploy %}
{% block frontmatter %}
{# 
  If you modify deployment path here, please first copy the old expression
  and add it to the list under "redirects:" below - this ensures we don't 
  break any existing links.  
#}
deployPath: epas/{{ product.version }}/installing/linux_{{platform.arch}}/epas_{{deploy.map_platform[platform.name]}}.mdx
redirects:
  - epas/{{ product.version }}/epas_inst_linux/installing_epas_using_edb_repository/{{deploy.expand_arch[platform.arch]}}/epas_{{deploy.map_platform_old[platform.name]}}_{{platform.arch | replace(r/_?64/g, "")}}.mdx
{% endblock frontmatter %}

{% block installCommand %}
{{super()}}{% block slesoption %}
Where `<xx>` is the version of the EDB Postgres Advanced server you are installing. For example, if you are installing version {{ product.version }}, the package name would be `edb-as{{ product.version }}-server`.

To install an individual component:

```shell
sudo {{packageManager}} -y install <package_name>
```
Where `package_name` can be any of the available packages from the [available package list](/epas/{{ product.version }}/installing/linux_install_details/rpm_packages/).
{% endblock slesoption %}{% endblock installCommand %}

{% block postinstall %}
## Initial configuration
{% block debian_ubuntu %}
This section steps you through getting started with your cluster including logging in, ensuring the installation and initial configuration was successful, connecting to your cluster, and creating the user password.

```shell
# Initialize the database cluster
PGSETUP_INITDB_OPTIONS="-E UTF-8" /usr/edb/as{{ product.version }}/bin/edb-as-{{ product.version | replace(".", "") }}-setup initdb

# Start the database cluster
systemctl start edb-as-{{ product.version }}{% endblock debian_ubuntu %}

# To work in your cluster, login as the enterprisedb user
su - enterprisedb

# Connect to the database server using the psql command line client
psql edb

# Assign a password to the database superuser the enterprisedb
ALTER ROLE enterprisedb IDENTIFIED BY password;

# Create a database (named hr)
CREATE DATABASE hr;

# Connect to the new database and create a table (named dept)
\c hr
CREATE TABLE public.dept (deptno numeric(2) NOT NULL CONSTRAINT dept_pk
PRIMARY KEY, dname varchar(14) CONSTRAINT dept_dname_uq UNIQUE, loc
varchar(13));

# Add data to the table
INSERT INTO dept VALUES (10,'ACCOUNTING','NEW YORK');
INSERT into dept VALUES (20,'RESEARCH','DALLAS');

# You can use simple SQL commands to query the database and retrieve 
# information about the data you have added to the table
SELECT * FROM dept;
__OUTPUT__
deptno  |   dname    |   loc
--------+------------+----------
10      | ACCOUNTING | NEW YORK
20      | RESEARCH   | DALLAS
(2 rows)
```
{% endblock postinstall %}